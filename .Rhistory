height = 3)
p36 = nhanes_train %>%
ggplot(aes(x = vigor_rec, y = ratio_income,
fill = vigor_rec)) +
geom_boxplot() +
scale_x_discrete(labels = c('Yes', 'No'))+
labs(x = "Whether or not engage in vigorous-intensity recreational activity",
y = "Ratio of family income to poverty",
title = "Vigorous-intensity recreational activity and SES") +
theme_bw() + theme(legend.position = "none")
#save p36
ggsave(filename = "income-vigor-rec.png",
plot = p36,
device = "png",
width = 5,
height = 3)
p36 = nhanes_train %>%
ggplot(aes(x = vigor_rec, y = ratio_income,
fill = vigor_rec)) +
geom_boxplot()
p36
p32 = nhanes_train %>%
ggplot(aes(x = sleepy, y = mental_score,
fill = sleepy)) +
geom_boxplot() +
scale_x_discrete(labels = c('Sometimes',
'Rarely',
'Often',
'Almost always',
'Never')) +
labs(x = "In the past month how often feeling overly sleepy during the day?",
y = "Mental health screening score",
title = "Excessive sleepiness and mental health") +
theme_bw() + theme(legend.position = "none")
#save p32
ggsave(filename = "results/sleepy-and-mental-health.png",
plot = p32,
device = "png",
width = 5,
height = 3)
p9 = nhanes_train %>%
ggplot(aes(x = race, y = mental_score, fill = race)) +
geom_boxplot() +
scale_x_discrete(labels = c('Non-Hispanic\nWhite',
'Mexican\nAmerican',
'Other\nHispanic',
'Non-Hispanic\nBlack',
'Other\nRace',
'Non-Hispanic\nAsian')) +
labs(x = "Race/ethnicity",
y = "Mental health screening score",
title = "Race and mental health") +
theme_bw() + theme(legend.position = "none")
ggsave(filename = "results/race-and-mental-health.png",
plot = p9,
device = "png",
width = 5,
height = 3)
p34 = nhanes_train %>%
ggplot(aes(x = dr_sleep, y = ratio_income,
fill = dr_sleep)) +
geom_boxplot()
p34
p34 = nhanes_train %>%
ggplot(aes(x = dr_sleep, y = ratio_income,
fill = dr_sleep)) +
geom_boxplot() +
scale_x_discrete(labels = c('No', 'Yes'))+
labs(x = "Ever told a doctor about trouble sleeping",
y = "Ratio of family income to poverty",
title = "Sleep trouble and income") +
theme_bw() + theme(legend.position = "none")
#save p34
ggsave(filename = "results/income-dr-sleep.png",
plot = p34,
device = "png",
width = 5,
height = 3)
p8 = nhanes_train %>%
ggplot(aes(x = female, y = mental_score, fill = female)) +
geom_boxplot() +
scale_x_discrete(labels = c('Female', 'Male')) +
labs(x = "Gender",
y = "Mental health screening score",
title = bquote (~bold("Gender and mental health risk"))) +
theme_bw() + theme(legend.position = "none")
# save p8
ggsave(filename = "results/gender-and-mental-health.png",
plot = p8,
device = "png",
width = 5,
height = 3)
p12= nhanes_train %>%
ggplot(aes(x = edu, y = mental_score, fill = edu)) +
geom_boxplot() +
scale_x_discrete(labels = c('College\ngraduate\nor above',
'High school\n/GED',
'Some college\n/AA degree',
'9th-11th grade',
'Less than 9th grade')) +
labs(x = "Education status",
y = "Mental health screening score",
tittle = bquote (~bold("Education and mental health risk"))) +
theme_bw() + theme(legend.position = "none")
# save p12
ggsave(filename = "results/education-and-mental-health.png",
plot = p12,
device = "png",
width = 5,
height = 3)
p14= nhanes_train %>%
ggplot(aes(x = dr_sleep, y = mental_score, fill = dr_sleep)) +
geom_boxplot() +
scale_x_discrete(labels = c('No', 'Yes')) +
labs(x = "Ever told a doctor about trouble sleeping",
y = "Mental health screening score",
title = bquote (~bold("Sleep trouble and mental health"))) +
theme_bw() + theme(legend.position = "none")
# save p14
ggsave(filename = "results/drsleep-and-mental-health.png",
plot = p14,
device = "png",
width = 5,
height = 3)
p30 = nhanes_train %>%
ggplot(aes(x = weight_self_percept, y = mental_score,
fill = weight_self_percept)) +
geom_boxplot() +
scale_x_discrete(labels = c('Overweight',
'About the right weight',
'Underweight')) +
labs(x = "How do you consider your weight?",
y = "Mental health screening score",
title = bquote (~bold("Weight self-perception and mental health"))) +
theme_bw() + theme(legend.position = "none")
#save p30
ggsave(filename = "results/weight-percept-and-mental-health.png",
plot = p30,
device = "png",
width = 5,
height = 3)
p32 = nhanes_train %>%
ggplot(aes(x = sleepy, y = mental_score,
fill = sleepy)) +
geom_boxplot() +
scale_x_discrete(labels = c('Sometimes',
'Rarely',
'Often',
'Almost always',
'Never')) +
labs(x = "In the past month how often feeling overly sleepy during the day?",
y = "Mental health screening score",
title = bquote (~bold("Excessive sleepiness and mental health"))) +
theme_bw() + theme(legend.position = "none")
#save p32
ggsave(filename = "results/sleepy-and-mental-health.png",
plot = p32,
device = "png",
width = 5,
height = 3)
p33 = nhanes_train %>%
ggplot(aes(x = vigor_rec, y = mental_score,
fill = vigor_rec)) +
geom_boxplot() +
scale_x_discrete(labels = c('Yes', 'No'))+
labs(x = "In a typical week do you do vigorous-intensity recreational activity?",
y = "Mental health screening score",
title = bquote (~bold
("Vigorous-intensity recreational activity and mental health "))) +
theme_bw() + theme(legend.position = "none")
#save p33
ggsave(filename = "results/vigor-rec-and-mental-health.png",
plot = p33,
device = "png",
width = 5,
height = 3)
p9 = nhanes_train %>%
ggplot(aes(x = race, y = mental_score, fill = race)) +
geom_boxplot() +
scale_x_discrete(labels = c('Non-Hispanic\nWhite',
'Mexican\nAmerican',
'Other\nHispanic',
'Non-Hispanic\nBlack',
'Other\nRace',
'Non-Hispanic\nAsian')) +
labs(x = "Race/ethnicity",
y = "Mental health screening score",
title = bquote (~bold("Race and mental health"))) +
theme_bw() + theme(legend.position = "none")
ggsave(filename = "results/race-and-mental-health.png",
plot = p9,
device = "png",
width = 5,
height = 3)
p34 = nhanes_train %>%
ggplot(aes(x = dr_sleep, y = ratio_income,
fill = dr_sleep)) +
geom_boxplot() +
scale_x_discrete(labels = c('No', 'Yes'))+
labs(x = "Ever told a doctor about trouble sleeping",
y = "Ratio of family income to poverty",
title = bquote (~bold("Sleep trouble and income"))) +
theme_bw() + theme(legend.position = "none")
#save p34
ggsave(filename = "results/income-dr-sleep.png",
plot = p34,
device = "png",
width = 5,
height = 3)
p36 = nhanes_train %>%
ggplot(aes(x = vigor_rec, y = ratio_income,
fill = vigor_rec)) +
geom_boxplot() +
scale_x_discrete(labels = c('Yes', 'No'))+
labs(x = "Whether or not engage in vigorous-intensity recreational activity",
y = "Ratio of family income to poverty",
title = bquote (~bold("Vigorous-intensity recreational activity and income"))) +
theme_bw() + theme(legend.position = "none")
#save p36
ggsave(filename = "income-vigor-rec.png",
plot = p36,
device = "png",
width = 5,
height = 3)
p40 = nhanes_train %>%
ggplot(aes(x = race, y = sleep_weekday,
fill = race)) +
geom_boxplot() +
scale_x_discrete(labels = c('Non-Hispanic\nWhite',
'Mexican\nAmerican',
'Other\nHispanic',
'Non-Hispanic\nBlack',
'Other\nRace',
'Non-Hispanic\nAsian'))+
labs(x = "Race",
y = "Weekday hours of sleep",
title = bquote (~bold("Race and weekday hours of sleep"))) +
theme_bw() + theme(legend.position = "none")
ggsave(filename = "race-weekday-sleep.png",
plot = p40,
device = "png",
width = 5,
height = 3)
p33 = nhanes_train %>%
ggplot(aes(x = vigor_rec, y = mental_score,
fill = vigor_rec)) +
geom_boxplot() +
scale_x_discrete(labels = c('Yes', 'No'))+
labs(x = "In a typical week do you do vigorous-intensity recreational activity?",
y = "Mental health screening score",
title = bquote (~bold
("Vigorous-intensity recreational\n&mental health "))) +
theme_bw() + theme(legend.position = "none")
p33
p33 = nhanes_train %>%
ggplot(aes(x = vigor_rec, y = mental_score,
fill = vigor_rec)) +
geom_boxplot() +
scale_x_discrete(labels = c('Yes', 'No'))+
labs(x = "In a typical week do you do vigorous-intensity recreational activity?",
y = "Mental health screening score",
title = bquote (~bold
("Recreational activity and mental health "))) +
theme_bw() + theme(legend.position = "none")
p33
p33 = nhanes_train %>%
ggplot(aes(x = vigor_rec, y = mental_score,
fill = vigor_rec)) +
geom_boxplot() +
scale_x_discrete(labels = c('Yes', 'No'))+
labs(x = "In a typical week do you do vigorous-intensity recreational activity?",
y = "Mental health screening score",
title = bquote (~bold
("Recreational activity and mental health "))) +
theme_bw() + theme(legend.position = "none")
#save p33
ggsave(filename = "results/vigor-rec-and-mental-health.png",
plot = p33,
device = "png",
width = 5,
height = 3)
p34 = nhanes_train %>%
ggplot(aes(x = dr_sleep, y = ratio_income,
fill = dr_sleep)) +
geom_boxplot() +
scale_x_discrete(labels = c('No', 'Yes'))+
labs(x = "Ever told a doctor about trouble sleeping",
y = "Ratio of family income to poverty",
title = bquote (~bold("Sleep trouble and income"))) +
theme_bw() + theme(legend.position = "none")
#save p34
ggsave(filename = "results/income-dr-sleep.png",
plot = p34,
device = "png",
width = 5,
height = 3)
p36 = nhanes_train %>%
ggplot(aes(x = vigor_rec, y = ratio_income,
fill = vigor_rec)) +
geom_boxplot() +
scale_x_discrete(labels = c('Yes', 'No'))+
labs(x = "Whether or not engage in vigorous-intensity recreational activity",
y = "Ratio of family income to poverty",
title = bquote (~bold("Recreational activity and income"))) +
theme_bw() + theme(legend.position = "none")
#save p36
ggsave(filename = "income-vigor-rec.png",
plot = p36,
device = "png",
width = 5,
height = 3)
p36 = nhanes_train %>%
ggplot(aes(x = vigor_rec, y = ratio_income,
fill = vigor_rec)) +
geom_boxplot() +
scale_x_discrete(labels = c('Yes', 'No'))+
labs(x = "Whether or not engage in vigorous-intensity recreational activity",
y = "Ratio of family income to poverty",
title = bquote (~bold("Recreational activity and income"))) +
theme_bw() + theme(legend.position = "none")
#save p36
ggsave(filename = "income-vigor-rec.png",
plot = p36,
device = "png",
width = 5,
height = 3)
ggsave(filename = "results/income-vigor-rec.png",
plot = p36,
device = "png",
width = 5,
height = 3)
ggsave(filename = "results/race-weekday-sleep.png",
plot = p40,
device = "png",
width = 5,
height = 3)
p9 = nhanes_train %>%
ggplot(aes(x = race, y = mental_score, fill = race)) +
geom_boxplot()
p9
p12= nhanes_train %>%
ggplot(aes(x = edu, y = mental_score, fill = edu)) +
geom_boxplot() +
scale_x_discrete(labels = c('College\ngraduate\nor above',
'High school\n/GED',
'Some college\n/AA degree',
'9th-11th\ngrade',
'Less than\n9th grade')) +
labs(x = "Education status",
y = "Mental health screening score",
tittle = bquote (~bold("Education and mental health risk"))) +
theme_bw() + theme(legend.position = "none")
# save p12
ggsave(filename = "results/education-and-mental-health.png",
plot = p12,
device = "png",
width = 5,
height = 3)
p34 = nhanes_train %>%
ggplot(aes(x = dr_sleep, y = ratio_income,
fill = dr_sleep)) +
geom_boxplot()
p34
library(rpart)             # install.packages("rpart")
library(rpart.plot)        # install.packages("rpart.plot")
library(tidyverse)
library(randomForest)
library(gbm)
#read in the training data
nhanes_train = read_csv("data/clean/nhanes_train.csv",
col_types = "iififfdffifddfffffffffffffffffffffiifffffff")
partial_dependence_plot_1 = plot(gbm_fit_optimal,
i.var = "sleepy",
n.trees = optimal_num_trees)
partial_dependence_plot_2 = plot(gbm_fit_optimal,
i.var = "dr_sleep",
n.trees = optimal_num_trees)
gbm_fit_optimal = gbm_fit_4
optimal_num_trees = gbm.perf(gbm_fit_4, plot.it = FALSE)
optimal_num_trees
set.seed(1)
gbm_fit = gbm(mental_score ~ . - subject,
distribution = "gaussian",
n.trees = 100,
interaction.depth = 1,
shrinkage = 0.1,
cv.folds = 5,
data = nhanes_train)
#visualize CV error
opt_num_trees = gbm.perf(gbm_fit)
opt_num_trees   #57
##Tuned the interaction depth
set.seed(1)
gbm_fit_1 = gbm(mental_score ~ . -subject,
distribution = "gaussian",
n.trees = 57,
interaction.depth = 1,
shrinkage = 0.1,
cv.folds = 5,
data = nhanes_train)
set.seed(1)
gbm_fit_2 = gbm(mental_score ~ . -subject,
distribution = "gaussian",
n.trees = 57,
interaction.depth = 2,
shrinkage = 0.1,
cv.folds = 5,
data = nhanes_train)
set.seed(1)
gbm_fit_3 = gbm(mental_score ~ . -subject,
distribution = "gaussian",
n.trees = 57,
interaction.depth = 3,
shrinkage = 0.1,
cv.folds = 5,
data = nhanes_train)
set.seed(1)
gbm_fit_4 = gbm(mental_score ~ . -subject,
distribution = "gaussian",
n.trees = 57,
interaction.depth = 4,
shrinkage = 0.1,
cv.folds = 5,
data = nhanes_train)
set.seed(1)
gbm_fit_5 = gbm(mental_score ~ . -subject,
distribution = "gaussian",
n.trees = 57,
interaction.depth = 5,
shrinkage = 0.1,
cv.folds = 5,
data = nhanes_train)
#extract cv errors
ntrees = 57
cv_errors = bind_rows(
tibble(ntree = 1:ntrees, cv_err = gbm_fit_1$cv.error, depth = 1),
tibble(ntree = 1:ntrees, cv_err = gbm_fit_2$cv.error, depth = 2),
tibble(ntree = 1:ntrees, cv_err = gbm_fit_3$cv.error, depth = 3),
tibble(ntree = 1:ntrees, cv_err = gbm_fit_4$cv.error, depth = 4),
tibble(ntree = 1:ntrees, cv_err = gbm_fit_5$cv.error, depth = 5)
)
#plot cv errors
d = cv_errors %>%
ggplot(aes(x = ntree, y = cv_err, colour = factor(depth))) +
geom_line() +
labs (x = "Number of trees",
y = "CV error",
title = "Tuning interaction depth") +
theme_bw()
ggsave(filename = "results/tuning-interaction-depth.png",
plot = d,
device = "png",
width = 6,
height = 4)
#optimal model and optimal number of trees
#Using min(gbm_fit_4$cv.error) and looking at the graph
gbm_fit_optimal = gbm_fit_4
optimal_num_trees = gbm.perf(gbm_fit_4, plot.it = FALSE)
optimal_num_trees   #34
#To get the variable importance measures
summary(gbm_fit_optimal, n.trees = optimal_num_trees, plotit = FALSE)
#create table
tibble(Variable = c("How often feeling overly sleepy during the day",
"Ever told a doctor about trouble sleeping",
"Age",
"Age started smoking regularly",
"Ratio of family income to poverty",
"Hours of weekend sleep",
"Hours of weekday sleep",
"Race",
"Education",
"Gender"),
`Relative influence` = c(16.561,11.880,11.441,
8.567,8.012,7.255,
5.932,5.108,3.482,2.434)) %>%
write_tsv("results/Variable importance of the boosted model.tsv")
#create partial dependence plots
partial_dependence_plot_1 = plot(gbm_fit_optimal,
i.var = "sleepy",
n.trees = optimal_num_trees)
partial_dependence_plot_2 = plot(gbm_fit_optimal,
i.var = "dr_sleep",
n.trees = optimal_num_trees)
partial_dependence_plot_1
partial_dependence_plot_2
partial_dependence_plot_5 = plot(gbm_fit_optimal,
i.var = "ratio_income",
n.trees = optimal_num_trees)
partial_dependence_plot_5
# run all steps of the analysis pipeline
source("code/0-download.R")
source("code/1-clean.R")
source("code/2-train-test-split.R")
source("code/3-exploration.R")
source("code/4-regression-modeling.R")
source("code/5-tree-modeling.R")
source("code/6-model-evaluation.R")
source("code/0-download.R")
source("code/1-clean.R")
source("code/2-train-test-split.R")
source("code/3-exploration.R")
source("code/4-regression-modeling.R")
source("code/5-tree-modeling.R")
source("code/6-model-evaluation.R")
`rlang::last_error()`
source("code/0-download.R")
source("code/1-clean.R")
source("code/2-train-test-split.R")
source("code/3-exploration.R")
source("code/4-regression-modeling.R")
source("code/5-tree-modeling.R")
source("code/6-model-evaluation.R")
